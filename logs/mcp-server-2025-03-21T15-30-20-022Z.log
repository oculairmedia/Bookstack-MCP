[2025-03-21T15:30:20.102Z] [DEBUG] Successfully read package.json from project root: E:\PROJECTS\letta tools\mcp-framework-server\package.json
[2025-03-21T15:30:20.103Z] [INFO] Using name from package.json: mcp-framework-server
[2025-03-21T15:30:20.103Z] [DEBUG] Successfully read package.json from project root: E:\PROJECTS\letta tools\mcp-framework-server\package.json
[2025-03-21T15:30:20.103Z] [INFO] Using version from package.json: 0.0.1
[2025-03-21T15:30:20.103Z] [INFO] Initializing MCP Server: mcp-framework-server@0.0.1
[2025-03-21T15:30:20.103Z] [DEBUG] Initialized ToolLoader with directory: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools
[2025-03-21T15:30:20.104Z] [DEBUG] Initialized PromptLoader with directory: E:\PROJECTS\letta tools\mcp-framework-server\dist\prompts
[2025-03-21T15:30:20.104Z] [DEBUG] Initialized ResourceLoader with directory: E:\PROJECTS\letta tools\mcp-framework-server\dist\resources
[2025-03-21T15:30:20.104Z] [DEBUG] Looking for tools in: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools
[2025-03-21T15:30:20.104Z] [DEBUG] Looking for prompts in: E:\PROJECTS\letta tools\mcp-framework-server\dist\prompts
[2025-03-21T15:30:20.104Z] [DEBUG] Looking for resources in: E:\PROJECTS\letta tools\mcp-framework-server\dist\resources
[2025-03-21T15:30:20.106Z] [DEBUG] Attempting to load tools from: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools
[2025-03-21T15:30:20.107Z] [DEBUG] Found files in directory: BookstackCreateBookTool.d.ts, BookstackCreateBookTool.js, BookstackCreatePageTool.d.ts, BookstackCreatePageTool.js, BookstackListBooksTool.d.ts, BookstackListBooksTool.js, BookstackToolBase.d.ts, BookstackToolBase.js, create_book.py, create_bookshelf.py, create_chapter.py, create_page.py, delete_book.py, delete_bookshelf.py, delete_chapter.py, delete_page.py, ExampleTool.d.ts, ExampleTool.js, ExampleToolTool.d.ts, ExampleToolTool.js, list_books.py, list_bookshelves.py, list_chapters.py, list_pages.py, read_book.py, read_bookshelf.py, read_chapter.py, read_page.py, test_tools.py, update_book.py, update_bookshelf.py, update_chapter.py, update_page.py, upload_all_tools.py
[2025-03-21T15:30:20.107Z] [DEBUG] Checking file BookstackCreateBookTool.js: included
[2025-03-21T15:30:20.107Z] [DEBUG] Attempting to load tool from: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools\BookstackCreateBookTool.js
[2025-03-21T15:30:20.108Z] [DEBUG] Validated tool: bookstack_create_book
[2025-03-21T15:30:20.108Z] [DEBUG] Checking file BookstackCreatePageTool.js: included
[2025-03-21T15:30:20.109Z] [DEBUG] Attempting to load tool from: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools\BookstackCreatePageTool.js
[2025-03-21T15:30:20.110Z] [DEBUG] Validated tool: bookstack_create_page
[2025-03-21T15:30:20.110Z] [DEBUG] Checking file BookstackListBooksTool.js: included
[2025-03-21T15:30:20.110Z] [DEBUG] Attempting to load tool from: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools\BookstackListBooksTool.js
[2025-03-21T15:30:20.111Z] [DEBUG] Validated tool: bookstack_list_books
[2025-03-21T15:30:20.111Z] [DEBUG] Checking file BookstackToolBase.js: included
[2025-03-21T15:30:20.111Z] [DEBUG] Attempting to load tool from: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools\BookstackToolBase.js
[2025-03-21T15:30:20.111Z] [WARN] Invalid tool found: missing required properties
[2025-03-21T15:30:20.111Z] [DEBUG] Checking file ExampleTool.js: included
[2025-03-21T15:30:20.111Z] [DEBUG] Attempting to load tool from: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools\ExampleTool.js
[2025-03-21T15:30:20.115Z] [DEBUG] Validated tool: example_tool
[2025-03-21T15:30:20.115Z] [DEBUG] Checking file ExampleToolTool.js: included
[2025-03-21T15:30:20.115Z] [DEBUG] Attempting to load tool from: E:\PROJECTS\letta tools\mcp-framework-server\dist\tools\ExampleToolTool.js
[2025-03-21T15:30:20.115Z] [DEBUG] Validated tool: example_tool
[2025-03-21T15:30:20.116Z] [DEBUG] Successfully loaded 5 tools: bookstack_create_book, bookstack_create_page, bookstack_list_books, example_tool, example_tool
[2025-03-21T15:30:20.116Z] [DEBUG] Attempting to load prompts from: E:\PROJECTS\letta tools\mcp-framework-server\dist\prompts
[2025-03-21T15:30:20.116Z] [DEBUG] No prompts directory found
[2025-03-21T15:30:20.117Z] [DEBUG] Attempting to load resources from: E:\PROJECTS\letta tools\mcp-framework-server\dist\resources
[2025-03-21T15:30:20.117Z] [DEBUG] No resources directory found
[2025-03-21T15:30:20.117Z] [DEBUG] No prompts directory found
[2025-03-21T15:30:20.117Z] [DEBUG] No resources directory found
[2025-03-21T15:30:20.118Z] [DEBUG] Creating MCP Server instance
[2025-03-21T15:30:20.118Z] [DEBUG] Server created with capabilities: {"tools":{"enabled":true}}
[2025-03-21T15:30:20.118Z] [INFO] Starting transport...
[2025-03-21T15:30:20.118Z] [DEBUG] Creating transport: sse
[2025-03-21T15:30:20.119Z] [DEBUG] SSE transport configured with: {"port":8080,"endpoint":"/sse","messageEndpoint":"/messages","maxMessageSize":"4mb","headers":{"Cache-Control":"no-cache","Connection":"keep-alive"},"cors":{"allowOrigin":"*","allowMethods":"GET, POST, OPTIONS","allowHeaders":"Content-Type, Authorization, x-api-key","exposeHeaders":"Content-Type, Authorization, x-api-key","maxAge":"86400"}}
[2025-03-21T15:30:20.123Z] [INFO] SSE transport listening on port 8080
[2025-03-21T15:30:20.123Z] [INFO] Transport connected successfully
[2025-03-21T15:30:20.123Z] [INFO] Started mcp-framework-server@0.0.1
[2025-03-21T15:30:20.123Z] [INFO] Transport: sse
[2025-03-21T15:30:20.123Z] [INFO] Tools (5): bookstack_create_book, bookstack_create_page, bookstack_list_books, example_tool
[2025-03-21T15:30:20.124Z] [INFO] Server running and ready for connections
[2025-03-21T15:30:21.080Z] [DEBUG] Incoming request: GET /sse
[2025-03-21T15:30:21.082Z] [DEBUG] Setting up SSE connection for session: 63281a2c-7c81-4830-81e0-5fe705412901
[2025-03-21T15:30:21.082Z] [DEBUG] SSE headers set: {"Content-Type":"text/event-stream","Cache-Control":"no-cache","Connection":"keep-alive","Access-Control-Allow-Origin":"*","Access-Control-Allow-Methods":"GET, POST, OPTIONS","Access-Control-Allow-Headers":"Content-Type, Authorization, x-api-key","Access-Control-Expose-Headers":"Content-Type, Authorization, x-api-key"}
[2025-03-21T15:30:21.082Z] [DEBUG] Socket optimized for SSE connection
[2025-03-21T15:30:21.082Z] [DEBUG] Sending endpoint URL: /messages?sessionId=63281a2c-7c81-4830-81e0-5fe705412901
[2025-03-21T15:30:21.084Z] [DEBUG] Sending initial keep-alive
[2025-03-21T15:30:21.084Z] [INFO] SSE connection established successfully for session: 63281a2c-7c81-4830-81e0-5fe705412901
[2025-03-21T15:30:36.086Z] [DEBUG] Sending keep-alive ping
[2025-03-21T15:30:39.135Z] [DEBUG] Incoming request: POST /messages?sessionId=63281a2c-7c81-4830-81e0-5fe705412901
[2025-03-21T15:30:39.149Z] [DEBUG] Received message: {"method":"tools/call","params":{"name":"bookstack_list_books","arguments":{"offset":"0","count":"10"}},"jsonrpc":"2.0","id":5}
[2025-03-21T15:30:39.149Z] [DEBUG] Parsed message - ID: 5, Method: tools/call
[2025-03-21T15:30:39.149Z] [DEBUG] Processing RPC message: {"id":5,"method":"tools/call","params":{"name":"bookstack_list_books","arguments":{"offset":"0","count":"10"}}}
[2025-03-21T15:30:39.151Z] [DEBUG] Tool call request received for: bookstack_list_books
[2025-03-21T15:30:39.152Z] [DEBUG] Tool call arguments: {"offset":"0","count":"10"}
[2025-03-21T15:30:39.152Z] [DEBUG] Executing tool: bookstack_list_books
[2025-03-21T15:30:39.153Z] [DEBUG] Successfully processed message 5
[2025-03-21T15:30:40.752Z] [DEBUG] Tool execution successful: {"content":[{"type":"text","text":"\"{\\\"data\\\": [{\\\"id\\\": 12, \\\"slug\\\": \\\"letta-api-documentation\\\", \\\"name\\\": \\\"Letta API Documentation\\\", \\\"description\\\": \\\"Comprehensive documentation for the Letta API, including SDKs and usage.\\\", \\\"created_at\\\": \\\"2025-02-12T20:27:37.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-12T20:27:37.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 14, \\\"slug\\\": \\\"letta-swarm-logic-documentation\\\", \\\"name\\\": \\\"Letta Swarm Logic Documentation\\\", \\\"description\\\": \\\"Comprehensive documentation of Letta's swarm intelligence system, including multi-agent coordination, communication protocols, and implementation guidelines.\\\", \\\"created_at\\\": \\\"2025-02-13T17:50:08.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-13T17:50:08.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 15, \\\"slug\\\": \\\"telegram-integration-documentation\\\", \\\"name\\\": \\\"Telegram Integration Documentation\\\", \\\"description\\\": \\\"Documentation of Telegram Integration for Letta. Includes API details, message handling, and async operation notes.\\\", \\\"created_at\\\": \\\"2025-02-13T22:36:29.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-13T22:36:29.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 16, \\\"slug\\\": \\\"brainbit-eeg-headband-documentation\\\", \\\"name\\\": \\\"BrainBit EEG Headband Documentation\\\", \\\"description\\\": \\\"Documentation on the BrainBit EEG headband, including technical specifications and SDK usage.\\\", \\\"created_at\\\": \\\"2025-02-14T03:36:02.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-23T03:38:08.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": {\\\"id\\\": 3, \\\"name\\\": \\\"BrainBit-Headband-1024x683.png\\\", \\\"url\\\": \\\"https://knowledge.oculair.ca/uploads/images/cover_book/2025-02/brainbit-headband-1024x683.png\\\"}}, {\\\"id\\\": 17, \\\"slug\\\": \\\"inline-python-tool-documentation\\\", \\\"name\\\": \\\"Inline Python Tool Documentation\\\", \\\"description\\\": \\\"Documentation of the capabilities and limitations of the inline Python code execution tool.\\\", \\\"created_at\\\": \\\"2025-02-14T07:51:06.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-23T03:38:58.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": {\\\"id\\\": 4, \\\"name\\\": \\\"python-logo-master-v3-TM-flattened.png\\\", \\\"url\\\": \\\"https://knowledge.oculair.ca/uploads/images/cover_book/2025-02/python-logo-master-v3-tm-flattened.png\\\"}}, {\\\"id\\\": 18, \\\"slug\\\": \\\"the-integration-cosmos-a-comprehensive-guide-to-digital-system-integration\\\", \\\"name\\\": \\\"The Integration Cosmos: A Comprehensive Guide to Digital System Integration\\\", \\\"description\\\": \\\"A comprehensive guide exploring the vast landscape of system integrations, from fundamental tools to cutting-edge technologies. This book covers everything from basic API integrations to futuristic concepts in digital system interconnectivity.\\\", \\\"created_at\\\": \\\"2025-02-14T08:49:35.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-14T08:49:35.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 19, \\\"slug\\\": \\\"notes-app-development-with-openhands\\\", \\\"name\\\": \\\"Notes App Development with OpenHands\\\", \\\"description\\\": \\\"Documentation of the notes app development process using OpenHands.\\\", \\\"created_at\\\": \\\"2025-02-17T04:15:54.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-17T04:15:54.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 20, \\\"slug\\\": \\\"open-source-image-generation-apis\\\", \\\"name\\\": \\\"Open-Source Image Generation APIs\\\", \\\"description\\\": \\\"Findings and resources related to open-source image generation APIs, specifically focusing on the OG:IMAGE REST Generator.\\\", \\\"created_at\\\": \\\"2025-02-17T09:41:54.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-17T09:41:54.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 27, \\\"slug\\\": \\\"open-source-fintech-data-sources-Xvt\\\", \\\"name\\\": \\\"Open Source Fintech Data Sources\\\", \\\"description\\\": \\\"Detailed overview of open source fintech data sources, including pros and cons.\\\", \\\"created_at\\\": \\\"2025-02-19T01:17:53.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-23T03:43:43.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": {\\\"id\\\": 6, \\\"name\\\": \\\"6334595e5128c42e893fa51f_fintech-1024x535.jpg\\\", \\\"url\\\": \\\"https://knowledge.oculair.ca/uploads/images/cover_book/2025-02/6334595e5128c42e893fa51f-fintech-1024x535.jpg\\\"}}, {\\\"id\\\": 29, \\\"slug\\\": \\\"openhands-integration-ideas-HzW\\\", \\\"name\\\": \\\"OpenHands Integration Ideas\\\", \\\"description\\\": \\\"Collection of ideas and strategies for integrating OpenHands, including conversation URLs and potential improvements.\\\", \\\"created_at\\\": \\\"2025-02-19T05:35:00.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-19T05:35:00.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}], \\\"total\\\": 21}\\r\\n\""}]}
[2025-03-21T15:30:40.753Z] [DEBUG] Transport sending message: {"result":{"content":[{"type":"text","text":"\"{\\\"data\\\": [{\\\"id\\\": 12, \\\"slug\\\": \\\"letta-api-documentation\\\", \\\"name\\\": \\\"Letta API Documentation\\\", \\\"description\\\": \\\"Comprehensive documentation for the Letta API, including SDKs and usage.\\\", \\\"created_at\\\": \\\"2025-02-12T20:27:37.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-12T20:27:37.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 14, \\\"slug\\\": \\\"letta-swarm-logic-documentation\\\", \\\"name\\\": \\\"Letta Swarm Logic Documentation\\\", \\\"description\\\": \\\"Comprehensive documentation of Letta's swarm intelligence system, including multi-agent coordination, communication protocols, and implementation guidelines.\\\", \\\"created_at\\\": \\\"2025-02-13T17:50:08.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-13T17:50:08.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 15, \\\"slug\\\": \\\"telegram-integration-documentation\\\", \\\"name\\\": \\\"Telegram Integration Documentation\\\", \\\"description\\\": \\\"Documentation of Telegram Integration for Letta. Includes API details, message handling, and async operation notes.\\\", \\\"created_at\\\": \\\"2025-02-13T22:36:29.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-13T22:36:29.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 16, \\\"slug\\\": \\\"brainbit-eeg-headband-documentation\\\", \\\"name\\\": \\\"BrainBit EEG Headband Documentation\\\", \\\"description\\\": \\\"Documentation on the BrainBit EEG headband, including technical specifications and SDK usage.\\\", \\\"created_at\\\": \\\"2025-02-14T03:36:02.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-23T03:38:08.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": {\\\"id\\\": 3, \\\"name\\\": \\\"BrainBit-Headband-1024x683.png\\\", \\\"url\\\": \\\"https://knowledge.oculair.ca/uploads/images/cover_book/2025-02/brainbit-headband-1024x683.png\\\"}}, {\\\"id\\\": 17, \\\"slug\\\": \\\"inline-python-tool-documentation\\\", \\\"name\\\": \\\"Inline Python Tool Documentation\\\", \\\"description\\\": \\\"Documentation of the capabilities and limitations of the inline Python code execution tool.\\\", \\\"created_at\\\": \\\"2025-02-14T07:51:06.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-23T03:38:58.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": {\\\"id\\\": 4, \\\"name\\\": \\\"python-logo-master-v3-TM-flattened.png\\\", \\\"url\\\": \\\"https://knowledge.oculair.ca/uploads/images/cover_book/2025-02/python-logo-master-v3-tm-flattened.png\\\"}}, {\\\"id\\\": 18, \\\"slug\\\": \\\"the-integration-cosmos-a-comprehensive-guide-to-digital-system-integration\\\", \\\"name\\\": \\\"The Integration Cosmos: A Comprehensive Guide to Digital System Integration\\\", \\\"description\\\": \\\"A comprehensive guide exploring the vast landscape of system integrations, from fundamental tools to cutting-edge technologies. This book covers everything from basic API integrations to futuristic concepts in digital system interconnectivity.\\\", \\\"created_at\\\": \\\"2025-02-14T08:49:35.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-14T08:49:35.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 19, \\\"slug\\\": \\\"notes-app-development-with-openhands\\\", \\\"name\\\": \\\"Notes App Development with OpenHands\\\", \\\"description\\\": \\\"Documentation of the notes app development process using OpenHands.\\\", \\\"created_at\\\": \\\"2025-02-17T04:15:54.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-17T04:15:54.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 20, \\\"slug\\\": \\\"open-source-image-generation-apis\\\", \\\"name\\\": \\\"Open-Source Image Generation APIs\\\", \\\"description\\\": \\\"Findings and resources related to open-source image generation APIs, specifically focusing on the OG:IMAGE REST Generator.\\\", \\\"created_at\\\": \\\"2025-02-17T09:41:54.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-17T09:41:54.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}, {\\\"id\\\": 27, \\\"slug\\\": \\\"open-source-fintech-data-sources-Xvt\\\", \\\"name\\\": \\\"Open Source Fintech Data Sources\\\", \\\"description\\\": \\\"Detailed overview of open source fintech data sources, including pros and cons.\\\", \\\"created_at\\\": \\\"2025-02-19T01:17:53.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-23T03:43:43.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": {\\\"id\\\": 6, \\\"name\\\": \\\"6334595e5128c42e893fa51f_fintech-1024x535.jpg\\\", \\\"url\\\": \\\"https://knowledge.oculair.ca/uploads/images/cover_book/2025-02/6334595e5128c42e893fa51f-fintech-1024x535.jpg\\\"}}, {\\\"id\\\": 29, \\\"slug\\\": \\\"openhands-integration-ideas-HzW\\\", \\\"name\\\": \\\"OpenHands Integration Ideas\\\", \\\"description\\\": \\\"Collection of ideas and strategies for integrating OpenHands, including conversation URLs and potential improvements.\\\", \\\"created_at\\\": \\\"2025-02-19T05:35:00.000000Z\\\", \\\"updated_at\\\": \\\"2025-02-19T05:35:00.000000Z\\\", \\\"owned_by\\\": 1, \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"cover\\\": null}], \\\"total\\\": 21}\\r\\n\""}]},"jsonrpc":"2.0","id":5}
[2025-03-21T15:30:49.396Z] [DEBUG] Incoming request: POST /messages?sessionId=63281a2c-7c81-4830-81e0-5fe705412901
[2025-03-21T15:30:49.397Z] [DEBUG] Received message: {"method":"tools/call","params":{"name":"bookstack_create_book","arguments":{"name":"Test Book from MCP Framework","description":"This is a test book created using the MCP framework"}},"jsonrpc":"2.0","id":6}
[2025-03-21T15:30:49.397Z] [DEBUG] Parsed message - ID: 6, Method: tools/call
[2025-03-21T15:30:49.397Z] [DEBUG] Processing RPC message: {"id":6,"method":"tools/call","params":{"name":"bookstack_create_book","arguments":{"name":"Test Book from MCP Framework","description":"This is a test book created using the MCP framework"}}}
[2025-03-21T15:30:49.397Z] [DEBUG] Tool call request received for: bookstack_create_book
[2025-03-21T15:30:49.398Z] [DEBUG] Tool call arguments: {"name":"Test Book from MCP Framework","description":"This is a test book created using the MCP framework"}
[2025-03-21T15:30:49.398Z] [DEBUG] Executing tool: bookstack_create_book
[2025-03-21T15:30:49.398Z] [DEBUG] Successfully processed message 6
[2025-03-21T15:30:50.774Z] [DEBUG] Tool execution successful: {"content":[{"type":"text","text":"\"{\\\"id\\\": 41, \\\"name\\\": \\\"Test Book from MCP Framework\\\", \\\"slug\\\": \\\"test-book-from-mcp-framework\\\", \\\"description\\\": \\\"This is a test book created using the MCP framework\\\", \\\"created_at\\\": \\\"2025-03-21T15:30:50.000000Z\\\", \\\"updated_at\\\": \\\"2025-03-21T15:30:50.000000Z\\\", \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"owned_by\\\": 1, \\\"default_template_id\\\": null, \\\"description_html\\\": \\\"<p>This is a test book created using the MCP framework</p>\\\", \\\"tags\\\": [], \\\"cover\\\": null}\\r\\n\""}]}
[2025-03-21T15:30:50.775Z] [DEBUG] Transport sending message: {"result":{"content":[{"type":"text","text":"\"{\\\"id\\\": 41, \\\"name\\\": \\\"Test Book from MCP Framework\\\", \\\"slug\\\": \\\"test-book-from-mcp-framework\\\", \\\"description\\\": \\\"This is a test book created using the MCP framework\\\", \\\"created_at\\\": \\\"2025-03-21T15:30:50.000000Z\\\", \\\"updated_at\\\": \\\"2025-03-21T15:30:50.000000Z\\\", \\\"created_by\\\": 1, \\\"updated_by\\\": 1, \\\"owned_by\\\": 1, \\\"default_template_id\\\": null, \\\"description_html\\\": \\\"<p>This is a test book created using the MCP framework</p>\\\", \\\"tags\\\": [], \\\"cover\\\": null}\\r\\n\""}]},"jsonrpc":"2.0","id":6}
[2025-03-21T15:30:51.101Z] [DEBUG] Sending keep-alive ping
[2025-03-21T15:30:58.394Z] [DEBUG] Incoming request: POST /messages?sessionId=63281a2c-7c81-4830-81e0-5fe705412901
[2025-03-21T15:30:58.394Z] [DEBUG] Received message: {"method":"tools/call","params":{"name":"bookstack_create_page","arguments":{"name":"Test Page from MCP Framework","book_id":"41","markdown":"# Test Page\n\nThis is a test page created using the MCP framework.\n\n## Features\n\n- Created via MCP\n- Uses Markdown formatting\n- Successfully demonstrates the fixed tools"}},"jsonrpc":"2.0","id":7}
[2025-03-21T15:30:58.395Z] [DEBUG] Parsed message - ID: 7, Method: tools/call
[2025-03-21T15:30:58.395Z] [DEBUG] Processing RPC message: {"id":7,"method":"tools/call","params":{"name":"bookstack_create_page","arguments":{"name":"Test Page from MCP Framework","book_id":"41","markdown":"# Test Page\n\nThis is a test page created using the MCP framework.\n\n## Features\n\n- Created via MCP\n- Uses Markdown formatting\n- Successfully demonstrates the fixed tools"}}}
[2025-03-21T15:30:58.395Z] [DEBUG] Tool call request received for: bookstack_create_page
[2025-03-21T15:30:58.395Z] [DEBUG] Tool call arguments: {"name":"Test Page from MCP Framework","book_id":"41","markdown":"# Test Page\n\nThis is a test page created using the MCP framework.\n\n## Features\n\n- Created via MCP\n- Uses Markdown formatting\n- Successfully demonstrates the fixed tools"}
[2025-03-21T15:30:58.395Z] [DEBUG] Executing tool: bookstack_create_page
[2025-03-21T15:30:58.397Z] [DEBUG] Successfully processed message 7
[2025-03-21T15:30:58.397Z] [DEBUG] Tool execution successful: {"content":[{"type":"error","text":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"number\",\n    \"received\": \"string\",\n    \"path\": [\n      \"book_id\"\n    ],\n    \"message\": \"Expected number, received string\"\n  }\n]"}]}
[2025-03-21T15:30:58.397Z] [DEBUG] Transport sending message: {"result":{"content":[{"type":"error","text":"[\n  {\n    \"code\": \"invalid_type\",\n    \"expected\": \"number\",\n    \"received\": \"string\",\n    \"path\": [\n      \"book_id\"\n    ],\n    \"message\": \"Expected number, received string\"\n  }\n]"}]},"jsonrpc":"2.0","id":7}
[2025-03-21T15:31:06.114Z] [DEBUG] Sending keep-alive ping
[2025-03-21T15:31:21.128Z] [DEBUG] Sending keep-alive ping
